filter(review_version %in% analysed_versions) %>%
filter(!(lead_author %in% exclude_from_analysis)) %>%
write_csv(., here::here('data_clean', 'data_study_general.csv'))
table_1 <- table_1 %>%
filter(review_version %in% analysed_versions) %>%
select(-review_version) %>%
filter(!(lead_author %in% exclude_from_analysis))
table_2 <- table_2 %>%
filter(review_version %in% analysed_versions) %>%
select(-review_version) %>%
filter(!(lead_author %in% exclude_from_analysis))
table_3 <- table_3 %>%
filter(review_version %in% analysed_versions) %>%
select(-review_version) %>%
filter(!(lead_author %in% exclude_from_analysis))
table_4 <- table_4 %>%
filter(review_version %in% analysed_versions) %>%
select(-review_version) %>%
filter(!(lead_author %in% exclude_from_analysis))
table_5 <- table_5 %>%
filter(review_version %in% analysed_versions) %>%
select(-review_version) %>%
filter(!(lead_author %in% exclude_from_analysis))
a <- data_study_general %>%
select(lead_author, date_published, source, study_id) %>%
rename('Lead Author' = lead_author,
'Date Published' = date_published,
'Publication Source' = source,
'Study ID' = study_id)
a$`Lead Author` <- to_upper_camel_case(a$`Lead Author`, sep_out = ", ")
a$`Publication Source` <- to_title_case(a$`Publication Source`)
a$`Publication Source` <- if_else(str_length(a$`Publication Source`) < 5,
toupper(a$`Publication Source`),
to_title_case(a$`Publication Source`))
datatable(a)
a <- flextable(a)%>%
set_table_properties(width = 1, layout = 'autofit') %>%
set_caption(caption = 'Studies included in the current analysis')
save_as_docx(a, path = here('data_clean', 'included_studies.docx'))
#Number screened to add to PRISMA
from_prev_version <- data_study_general %>%
filter(review_version %in% prev_versions) %>%
filter(!(lead_author %in% exclude_from_analysis)) %>%
tally()
source(here::here('scripts', 'prisma_function.R'))
PRISMA_v5 <- PRISMA(search_details)
PRISMA_v5 <- as.data.frame(PRISMA_v5)
a <- PRISMA_v5 %>%
t() %>%
as.data.frame() %>%
add_rownames() %>%
flextable() %>%
set_header_labels(rowname = 'PRISMA category',
V1 = 'Number of studies') %>%
set_table_properties(width = 1, layout = 'autofit') %>%
set_caption(caption = 'Data for PRISMA')
save_as_docx(a, path = here('data_clean', 'PRISMA_details.docx'))
a
library('ggmap')
#Countries
country <- table_1$country %>%
to_upper_camel_case() %>%
recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Country' = 1,
'Number' = 2) %>%
mutate(Country = as.character(Country))
ggplot(country, aes(x = reorder(Country, desc(-Number)), y = Number))+
geom_col()+
coord_flip()+
theme_bw()+
labs(title = 'Countries where studies were performed',
y = 'Number of studies',
x = 'Country')
a <- flextable(country) %>%
set_table_properties(width = 0.5, layout = 'autofit')
a
country <- subset(country, Country != "Multiple")
country <- mutate_geocode(country, Country)
country_bounds <- country %>%
select(lon, lat) %>%
drop_na %>%
sp::SpatialPointsDataFrame(coords = .[,1:2], data = .) %>%
sp::bbox() * 1.1
map_world <- map_data(map = "world") %>%
filter(region != "Antarctica")
study_countries <- ggplot() +
geom_polygon(data = map_world,
aes(long, lat, group = group, fill = region),
show.legend = FALSE,
alpha = 0.25,
color = "white") +
geom_point(data = country,
aes(lon, lat, size = Number), shape = 20) +
scale_size_continuous(name = "Number of studies") +
theme_bw() +
theme(axis.line = element_line(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text = element_blank()) +
labs(title = "Number of studies",
caption = "D. Kahle and H. Wickham. ggmap: Spatial Visualization with ggplot2. The R Journal")
study_countries
save_as_docx(a, path = here('data_clean', 'Countries_performing_studies.docx'))
table_1$country
length(table_1$country)
table_1$country %>%
to_upper_camel_case() %>%
recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Country' = 1,
'Number' = 2) %>%
mutate(Country = as.character(Country))
summary(table_1$country %>%
+   to_upper_camel_case() %>%
+   recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
+   table() %>%
+   as.data.frame() %>%
+   arrange(desc(Freq)) %>%
+   rename('Country' = 1,
+          'Number' = 2) %>%
+   mutate(Country = as.character(Country)))
summary(table_1$country %>%
+   to_upper_camel_case() %>%
+   recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
+   table() %>%
+   as.data.frame() %>%
+   arrange(desc(Freq)) %>%
+   rename('Country' = 1,
+          'Number' = 2) %>%
+   mutate(Country = as.character(Country))
#Countries
country <- table_1$country %>%
to_upper_camel_case() %>%
recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Country' = 1,
'Number' = 2) %>%
mutate(Country = as.character(Country))
summary(country)
summary(table_1$country)
summarise(table_1$country)
summarise(as.factor(table_1$country))
summary(as.factor(table_1$country))
a
levels(as.factor(table_1$country))
tally(levels(as.factor(table_1$country)))
table_1 %>%
group_by(country) %>%
summarise()
table_1 %>%
group_by(country) %>%
tally()
a <- table_1 %>% group_by(country) %>% tally()
View(a)
length(table_1$country)
table(table_1$country)
sum(tally(table_1$country))
table_1
table_1 %>%
filter(review_version %in% analysed_versions) %>%
select(-review_version) %>%
filter(!(lead_author %in% exclude_from_analysis))
View(table_1)
knitr::opts_chunk$set(echo = TRUE,
warning = F,
message = F)
unlink('reports/markdown_report_cache', recursive = TRUE)
library('tidyverse', quietly = T)
library('ggplot2', quietly = T)
library('dplyr', quietly = T)
library('readxl', quietly = T)
library('linelist', quietly = T)
library('googlesheets4', quietly = T)
library('naniar', quietly = T)
library('gridExtra', quietly = T)
library('snakecase', quietly = T)
library('epitools', quietly = T)
library('meta', quietly = T)
library('knitr', quietly = T)
library('kableExtra', quietly = T)
library('snakecase', quietly = T)
library('here', quietly = T)
library('flextable', quietly = T)
library('DT', quietly = T)
sheets_id <- as_sheets_id("https://docs.google.com/spreadsheets/d/1qoJT05r1jvkKj81-tnDLDN9Fe7bkVhhD-USTj7k5uRQ/edit?usp=sharing")
search_details <- read_sheet(sheets_id, range = 'article_screening')
data_study_general <- read_sheet(sheets_id, range =  'general_details')
table_1 <- read_sheet(sheets_id, sheet = 'pop_descriptives')
table_2 <-  read_sheet(sheets_id, sheet = 'testing')
table_3 <-  read_sheet(sheets_id, sheet = 'hospitalisation')
table_4 <-  read_sheet(sheets_id, sheet = 'severity')
table_5 <-  read_sheet(sheets_id, sheet = 'mortality')
table_6 <-  read_sheet(sheets_id, sheet = 'updated_quality_appraisal')
flextable(head(search_details))
datatable(data_study_general[1:4] %>%
mutate(`date_published_format(2020-05-12)` = as.Date(data_study_general$`date_published_format(2020-05-12)`)),
colnames = c("Lead author" = 2, "Date published" = 3, "Source" = 4, "DOI" = 5))
datatable(table_1 %>%
filter(lead_author != is.na(lead_author)))
datatable(
table_2 %>%
filter(data_on_testing == TRUE)
)
datatable(
table_3 %>%
filter(data_on_hospitalisation == TRUE)
)
datatable(
table_4 %>%
filter(data_disease_severity == TRUE)
)
datatable(
table_5 %>%
filter(data_on_deaths == TRUE)
)
search_details <- search_details %>%
clean_data() %>%
rename(date_screened = date_screening_in_format_2020_05_22) %>%
write_rds(here::here('data_clean', 'search_details.rds')) ## The title of the date screened column is to communicate among the review team how we need date formatted
protect_columns_1 <- names(data_study_general) %in% 'doi' ## As the DoI's are links we want to preserve their formatting when running the cleaning script
data_study_general <- data_study_general %>%
rename('notes' = 11, date_published = `date_published_format(2020-05-12)`) %>%
clean_data(protect = protect_columns_1) %>%
mutate(study_id = 1:length(lead_author)) %>% ## We create a unique study ID to aid checking of the outputs later
write_rds(here::here('data_clean', 'data_study_general.rds'))
review_details <- data_study_general %>%
select(lead_author, date_published, country, review_version, study_id) %>% ## The version of the review in which included studies were incorporated is noted
write_rds(here::here('data_clean', 'review_details.rds'))
table_1 <- table_1 %>%
clean_data() %>%
mutate(., lower_range = sub('\\_.*', '', .$range)) %>%
mutate(., upper_range = sub('.*_', '',.$range,)) %>% ## We break apart the age range into an upper and lower level
select(lead_author, sample_size, female_sex_percent, data_source, median_age, mean_age, iqr_lower, iqr_upper, standard_deviation, lower_range,
upper_range, current_smoker, former_smoker, current_former_smoker, never_smoker, never_smoker_unknown, current_vaper, former_vaper,
current_former_vaper, not_stated, missing, total) %>%
filter(!is.na(lead_author)) %>%
left_join(., review_details, by = 'lead_author') %>%
write_rds(here::here('data_clean', 'table_1.rds'))
##For the following tables we're only interested in obtaining data for trials which report on the specific outcome of interest
table_2 <-  table_2 %>%
clean_data() %>%
filter(data_on_testing == TRUE) %>%
left_join(., review_details, by = 'lead_author') %>%
write_rds(here::here('data_clean', 'table_2.rds'))
table_3 <-  table_3 %>%
clean_data() %>%
filter(data_on_hospitalisation == TRUE) %>%
left_join(., review_details, by = 'lead_author') %>%
write_rds(here::here('data_clean', 'table_3.rds'))
table_4 <-  table_4 %>%
clean_data() %>%
filter(data_disease_severity == TRUE) %>%
left_join(., review_details, by = 'lead_author') %>%
write_rds(here::here('data_clean', 'table_4.rds'))
table_5 <- table_5 %>%
clean_data() %>%
filter(data_on_deaths == TRUE) %>%
left_join(., review_details, by = 'lead_author') %>%
write_rds(here::here('data_clean', 'table_5.rds'))
protect_columns_2 <- !names(table_6) %in% 'lead_author'
table_6 <-  table_6 %>%
clean_data(protect = protect_columns_2) %>%
left_join(., table_1 %>%
select(lead_author,
not_stated,
missing,
total),
by = 'lead_author') %>%
mutate(missingness = rowSums(.[8:9], na.rm = T),
missingness_percentage = (missingness/total)*100) %>% ## Later we want to assess the amount of missingness for each study as it would impact the inclusion of a study into the relevant meta-analyses
select(-c(not_stated, missing, total, missingness)) %>%
write_rds(here::here('data_clean', 'table_6.rds'))
a <- data_study_general %>%
select(lead_author, date_published, source, study_id) %>%
rename('Lead Author' = lead_author,
'Date Published' = date_published,
'Publication Source' = source,
'Study ID' = study_id)
a$`Lead Author` <- to_upper_camel_case(a$`Lead Author`, sep_out = ", ")
a$`Publication Source` <- to_title_case(a$`Publication Source`)
a$`Publication Source` <- if_else(str_length(a$`Publication Source`) < 5,
toupper(a$`Publication Source`),
to_title_case(a$`Publication Source`))
datatable(a)
a <- flextable(a)%>%
set_caption(a, caption = 'All studies included in data extraction') %>%
set_table_properties(width = 1, layout = 'autofit')
save_as_docx(a, path = here('data_clean', 'all_studies.docx'))
date_of_update <- Sys.Date()
prev_versions <- c('v1', 'v2', 'v3', 'v4')
#This can categorise which studies we want to look at
current_version <- c('v5')
#This will categorise which studies we are including in the current report
analysed_versions <- c('v1', 'v2', 'v3', 'v4', 'v5')
#This will incorporate all studies into the current version of the report
exclude_from_analysis <- c('isaric_1', 'isaric_2', 'isaric_3', 'miyara_old', 'isaric_4', 'mehra', 'hopkinson', 'gaibazzi', 'miyara_updated', 'russell')
data_study_general <- data_study_general %>%
filter(review_version %in% analysed_versions) %>%
filter(!(lead_author %in% exclude_from_analysis)) %>%
write_csv(., here::here('data_clean', 'data_study_general.csv'))
table_1 <- table_1 %>%
filter(review_version %in% analysed_versions) %>%
select(-review_version) %>%
filter(!(lead_author %in% exclude_from_analysis))
table_2 <- table_2 %>%
filter(review_version %in% analysed_versions) %>%
select(-review_version) %>%
filter(!(lead_author %in% exclude_from_analysis))
table_3 <- table_3 %>%
filter(review_version %in% analysed_versions) %>%
select(-review_version) %>%
filter(!(lead_author %in% exclude_from_analysis))
table_4 <- table_4 %>%
filter(review_version %in% analysed_versions) %>%
select(-review_version) %>%
filter(!(lead_author %in% exclude_from_analysis))
table_5 <- table_5 %>%
filter(review_version %in% analysed_versions) %>%
select(-review_version) %>%
filter(!(lead_author %in% exclude_from_analysis))
a <- data_study_general %>%
select(lead_author, date_published, source, study_id) %>%
rename('Lead Author' = lead_author,
'Date Published' = date_published,
'Publication Source' = source,
'Study ID' = study_id)
a$`Lead Author` <- to_upper_camel_case(a$`Lead Author`, sep_out = ", ")
a$`Publication Source` <- to_title_case(a$`Publication Source`)
a$`Publication Source` <- if_else(str_length(a$`Publication Source`) < 5,
toupper(a$`Publication Source`),
to_title_case(a$`Publication Source`))
datatable(a)
a <- flextable(a)%>%
set_table_properties(width = 1, layout = 'autofit') %>%
set_caption(caption = 'Studies included in the current analysis')
save_as_docx(a, path = here('data_clean', 'included_studies.docx'))
#Number screened to add to PRISMA
from_prev_version <- data_study_general %>%
filter(review_version %in% prev_versions) %>%
filter(!(lead_author %in% exclude_from_analysis)) %>%
tally()
source(here::here('scripts', 'prisma_function.R'))
PRISMA_v5 <- PRISMA(search_details)
PRISMA_v5 <- as.data.frame(PRISMA_v5)
a <- PRISMA_v5 %>%
t() %>%
as.data.frame() %>%
add_rownames() %>%
flextable() %>%
set_header_labels(rowname = 'PRISMA category',
V1 = 'Number of studies') %>%
set_table_properties(width = 1, layout = 'autofit') %>%
set_caption(caption = 'Data for PRISMA')
save_as_docx(a, path = here('data_clean', 'PRISMA_details.docx'))
a
library('ggmap')
#Countries
country <- table_1$country %>%
to_upper_camel_case() %>%
recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Country' = 1,
'Number' = 2) %>%
mutate(Country = as.character(Country))
ggplot(country, aes(x = reorder(Country, desc(-Number)), y = Number))+
geom_col()+
coord_flip()+
theme_bw()+
labs(title = 'Countries where studies were performed',
y = 'Number of studies',
x = 'Country')
a <- flextable(country) %>%
set_table_properties(width = 0.5, layout = 'autofit')
a
country <- subset(country, Country != "Multiple")
country <- mutate_geocode(country, Country)
country_bounds <- country %>%
select(lon, lat) %>%
drop_na %>%
sp::SpatialPointsDataFrame(coords = .[,1:2], data = .) %>%
sp::bbox() * 1.1
map_world <- map_data(map = "world") %>%
filter(region != "Antarctica")
study_countries <- ggplot() +
geom_polygon(data = map_world,
aes(long, lat, group = group, fill = region),
show.legend = FALSE,
alpha = 0.25,
color = "white") +
geom_point(data = country,
aes(lon, lat, size = Number), shape = 20) +
scale_size_continuous(name = "Number of studies") +
theme_bw() +
theme(axis.line = element_line(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text = element_blank()) +
labs(title = "Number of studies",
caption = "D. Kahle and H. Wickham. ggmap: Spatial Visualization with ggplot2. The R Journal")
study_countries
save_as_docx(a, path = here('data_clean', 'Countries_performing_studies.docx'))
#Setting
setting <- to_upper_camel_case(data_study_general$study_setting, sep_out = ' ') %>%
table(.) %>%
sort('Number of studies', decreasing = T) %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Setting' = 1,
'Number' = 2)
a <- flextable(setting) %>%
set_table_properties(width = 0.5, layout = 'autofit')
a
save_as_docx(a, path = here('data_clean', 'Countries_performing_studies.docx'))
#Numbers
a <- summary(table_1$sample_size)
a
#Source of data
table_1$data_source %>%
recode('electronic_health_records' = 'Electronic health record',
'case_report_form' = 'Case report form',
'not_stated' = 'Not stated') %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Data source' = 1,
'Number' = 2) %>%
flextable() %>%
set_table_properties(width = 0.5, layout = 'autofit')
#Studies reporting smokers
current_smok <- table_1 %>%
filter(., current_smoker != 'NA')
#Studies reporting former smokers
former_smok <- table_1 %>%
filter(., former_smoker != 'NA')
#Studies reporting never smokers
never_smok <- table_1 %>%
filter(., never_smoker != 'NA')
#Studies reporting current/former smokers
current_former_smok <- table_1 %>%
filter(., current_former_smoker != 'NA')
#Studies reporting missing data
missing_smok <- table_1 %>%
filter(., missing != 'NA') %>%
mutate(percent = missing/total*100)
minimum <- min(missing_smok$percent)
maximum <- max(missing_smok$percent)
#Studies reporting never/unknown
never_smok_unknown <- table_1 %>%
filter(., never_smoker_unknown != 'NA')
#Studies with not stated
smok_not_stated <- table_1 %>%
filter(., not_stated != 'NA')
#Studies reporting current, former and never smoking status
full_smoking_status <- table_1 %>%
filter(lead_author %in% current_smok$lead_author) %>%
filter(lead_author %in% former_smok$lead_author) %>%
filter(lead_author %in% never_smok$lead_author)
b <- full_smoking_status %>%
select(lead_author, sample_size, current_smoker, former_smoker, never_smoker, study_id) %>%
rename('Lead author' = lead_author,
'Sample size' = sample_size,
'Current smokers' = current_smoker,
'Former smokers' = former_smoker,
'Never smokers' = never_smoker,
'Study ID' = study_id)
b$`Lead author` <- to_upper_camel_case(b$`Lead author`, sep_out = ", ")
datatable(b,
caption = "Studies providing data on current, former and never smokers") %>%
formatRound(columns = c(2:5), digits = 0, interval = 3, mark = ",")
#These are the studies with data on current, former and never smokers
#Studies reporting current or current/former and never smoking
semi_full_smoking_status <- table_1 %>%
filter(lead_author %in% current_former_smok$lead_author) %>%
filter(lead_author %in% never_smok$lead_author) %>%
filter(!lead_author %in% full_smoking_status$lead_author)
b <- semi_full_smoking_status %>%
select(lead_author, sample_size, current_former_smoker, never_smoker, study_id) %>%
rename('Lead author' = lead_author,
'Sample size' = sample_size,
'Current/former smokers' = current_former_smoker,
'Never smokers' = never_smoker,
'Study ID' = study_id)
b$`Lead author` <- to_upper_camel_case(b$`Lead author`, sep_out = ", ")
datatable(b,
caption = "Studies providing partially complete data on smoking status") %>%
formatRound(columns = c(2:4), digits = 0, interval = 3, mark = ",")
missing_smok
current_former_smok
missing_smok
minimum <- min(missing_smok$percent)
maximum <- max(missing_smok$percent)
missing_smok
knitr::opts_chunk$set(echo = TRUE,
warning = F,
message = F)
options(width = 180)
unlink('reports/markdown_report_cache', recursive = TRUE)
