upper_range, standard_deviation, female_sex_percent, current_percentage, former_percentage, current_former_percentage,
never_smoker_percentage, never_smoker_unknown_percentage, not_stated_percentage, missing_percentage, study_id) %>%
replace_na(., list(not_stated_percentage = 0, missing_percentage = 0)) %>%
mutate(., missing_percentage = not_stated_percentage + missing_percentage,
missing_percentage = formatC(missing_percentage, digits = 2, format = "f"))
#Smoking completeness
smoking_status <- as_tibble(full_smoking_status$lead_author) %>%
rename(lead_author = 1) %>%
mutate(complete_status = c("Yes")) %>%
bind_rows(., semi_full_smoking_status %>%
select(lead_author)) %>%
bind_rows(., incomplete_smoking_status %>%
select(lead_author)) %>%
distinct() %>%
mutate(complete_status = replace_na(complete_status, "No"))
#Data missingness
missingness <- table_6 %>%
select(lead_author) %>%
left_join(., table_1_word %>%
select(lead_author, missing_percentage)) %>%
mutate(missing_percentage = as.numeric(missing_percentage),
low_missingness = ifelse(missing_percentage >= 20, "No", "Yes"))
#Defining poor quality
poor_quality <- missingness %>%
select(-missing_percentage) %>%
left_join(., smoking_status, by = "lead_author") %>%
mutate(study_quality = ifelse(low_missingness == "No" | complete_status == "No", "Poor", "Not_poor"))
good_quality <- table_6 %>%
left_join(., poor_quality, by = "lead_author") %>%
select(lead_author, study_quality, biochemical_verification, random_representative_sample) %>%
mutate(study_quality_final = ifelse(study_quality == "Not_poor" & (biochemical_verification == "Yes" | random_representative_sample == "Yes"), "good",
ifelse(study_quality == "Poor", "poor", "fair")))
quality_rating <- good_quality %>%
select(lead_author, study_quality_final) %>%
rename("overall_quality" = study_quality_final)
table_1_word <- left_join(table_1_word, good_quality %>%
select(lead_author, study_quality_final))
a <- data_study_general %>%
select(study_id, study_setting)
table_1_word <- left_join(table_1_word, a, by = 'study_id') %>%
select(1:4, 22, 5:19, 21, 20)
table_1_word$date_published <- as.Date.character(table_1_word$date_published)
write_rds(table_1_word, here::here('data_clean', 'table_1_word.rds'))
table_1_word <- table_1_word %>%
mutate(median_mean = ifelse(is.na(median_age), mean_age, median_age))
a <- table_1_word %>%
mutate(median_mean = ifelse(is.na(median_age), mean_age, median_age),
mean_used = ifelse(is.na(mean_age), '','^'),
iqr = ifelse(is.na(iqr_lower), NA, paste(iqr_lower, iqr_upper, sep = '-')),
range_combined = paste(lower_range, upper_range, sep = '-'),
range_combined = na_if(range_combined, 'NA-NA'),
standard_deviation = as.numeric(standard_deviation),
st_dev = paste((as.integer(median_mean-standard_deviation)), as.integer((median_mean+standard_deviation)), sep = '-'),
st_dev = na_if(st_dev, 'NA-NA'))
a$iqr <- coalesce(a$iqr, a$range_combined, a$st_dev)
a <- a %>%
select(study_id, lead_author, date_published, country, sample_size, study_setting, median_mean, mean_used, iqr,
female_sex_percent, current_percentage, former_percentage, current_former_percentage, never_smoker_percentage,
never_smoker_unknown_percentage, missing_percentage, study_quality_final) %>%
mutate(median_mean = paste(median_mean, mean_used, sep = ''),
median_mean = na_if(median_mean, NA)) %>%
select(-mean_used) %>%
mutate(median_mean = ifelse(median_mean == 'NA', 'NA', paste(paste(median_mean, iqr, sep = ' ('),')', sep = ''))) %>%
select(-iqr) %>%
rename('Study ID' = study_id,
'Lead author' = lead_author,
'Date published' = date_published,
'Country' = country,
'Sample size' = sample_size,
'Study setting' = study_setting,
'Median (IQR)' = median_mean,
'Female %' = female_sex_percent,
'Current smoker %' = current_percentage,
'Former smokers %' = former_percentage,
'Current/former smokers %' = current_former_percentage,
'Never smokers %' = never_smoker_percentage,
'Never/unknown smokers %' = never_smoker_unknown_percentage,
'Missing %' = missing_percentage,
"Study quality" = study_quality_final)
a$`Lead author` <- to_upper_camel_case(a$`Lead author`, sep_out = ", ")
author_list <- plyr::mapvalues(a$`Lead author`,
from = cleaned_names,
to = correct_names)
a$`Lead author` <- author_list
a$`Study setting` <-to_title_case(a$`Study setting`, sep_out = " ")
a$`Country` <-to_title_case(a$`Country`, sep_out = " ")
a$`Country` <- a$Country %>%
recode('Usa' = 'USA',
'Uk' = 'UK')
numeric_columns <- c('Median (IQR)', 'Female %', 'Current smoker %','Former smokers %', 'Current/former smokers %',
'Never smokers %', 'Never/unknown smokers %', 'Missing %')
datatable(a) %>%
formatRound(
columns = c(8:14),
digits = 2,
interval = 3,
mark = ",",
dec.mark = getOption("OutDec")
)
a <- flextable(a) %>%
set_caption(caption = 'Characteristics of included studies') %>%
colformat_num(col_keys = numeric_columns, digits = 1, na_str = '-', big.mark = ',') %>%
colformat_num(col_keys = 'Sample size', digits = 0, na_str = '-', big.mark = ',') %>%
set_table_properties(width = 1, layout = 'autofit')
save_as_docx(a, path = here('output_data', 'Table_1.docx'))
#Table 2
table_2_word <-  table_2 %>%
mutate(., sample = contributing_sample) %>%
mutate(., negative_test_percentage =formatC(negative_test/sample*100, digits = 2, format = "f"),
negative_current_percentage = formatC(negative_current_smoker/negative_test*100, digits = 2, format = "f"),
negative_former_smoker_percentage = formatC(negative_former_smoker/negative_test*100, digits = 2, format = "f"),
negative_current_former_smoker_percentage = formatC(negative_current_former_smoker/negative_test*100, digits = 2, format = "f"),
negative_never_smoker_percentage = formatC(negative_never_smoker/negative_test*100, digits = 2, format = "f"),
negative_not_stated_percentage = formatC(negative_not_stated/negative_test*100, digits = 2, format = "f"),
positive_test_percentage = formatC(positive_test/sample*100, digits = 2, format = "f"),
positive_current_smoker_percentage = formatC(positive_current_smoker/positive_test*100, digits = 2, format = "f"),
positive_former_smoker_percentage = formatC(positive_former_smoker/positive_test*100, digits = 2, format = "f"),
positive_current_former_smoker_percentage = formatC(positive_current_former_smoker/positive_test*100, digits = 2, format = "f"),
positive_never_smoker_percentage = formatC(positive_never_smoker/positive_test*100, digits = 2, format = "f"),
positive_not_stated_percentage = formatC(positive_not_stated/positive_test*100, digits = 2, format = "f")) %>%
select(-data_on_testing, -missing, -date_published, -sample) %>%
write_rds(here::here('data_clean', 'table_2_word.rds'))
quality_table_2 <- table_2_word %>%
left_join(., quality_rating, by = 'lead_author')
a <- table_2_word %>%
filter(contributing_sample >= 1) %>%
mutate(Author = lead_author,
Population_tested = contributing_sample,
SARS_CoV_2_negative = paste(
paste(negative_test,
(negative_test_percentage), sep = " ("), "%)", sep = ""),
N_current_smoker = paste(paste(negative_current_smoker, (negative_current_percentage), sep = " (")
, "%)", sep = ""),
N_current_smoker = na_if(N_current_smoker, "NA ( NA%)"),
N_former_smoker = paste(paste(negative_former_smoker, (negative_former_smoker_percentage), sep = " (")
, "%)", sep = ""),
N_former_smoker = na_if(N_former_smoker, "NA ( NA%)"),
N_current_former_smoker = paste(paste(negative_current_former_smoker,
(negative_current_former_smoker_percentage), sep = " (")
, "%)", sep = ""),
N_current_former_smoker = na_if(N_current_former_smoker, "NA ( NA%)"),
N_never_smoker = paste(paste(negative_never_smoker,
(negative_never_smoker_percentage), sep = " (")
, "%)", sep = ""),
N_never_smoker = na_if(N_never_smoker, "NA ( NA%)"),
N_not_stated = paste(paste(negative_not_stated,
(negative_not_stated_percentage), sep = " (")
, "%)", sep = ""),
N_not_stated = na_if(N_not_stated, "NA ( NA%)")) %>%
mutate(SARS_CoV_2_positive = paste(
paste(positive_test,
(positive_test_percentage), sep = " ("), "%)", sep = ""),
P_current_smoker = paste(paste(positive_current_smoker, (positive_current_smoker_percentage), sep = " (")
, "%)", sep = ""),
P_current_smoker = na_if(P_current_smoker, "NA ( NA%)"),
P_former_smoker = paste(paste(positive_former_smoker, (positive_former_smoker_percentage), sep = " (")
, "%)", sep = ""),
P_former_smoker = na_if(P_former_smoker, "NA ( NA%)"),
P_current_former_smoker = paste(paste(positive_current_former_smoker,
(positive_current_former_smoker_percentage), sep = " (")
, "%)", sep = ""),
P_current_former_smoker = na_if(P_current_former_smoker, "NA ( NA%)"),
P_never_smoker = paste(paste(positive_never_smoker,
(positive_never_smoker_percentage), sep = " (")
, "%)", sep = ""),
P_never_smoker = na_if(P_never_smoker, "NA ( NA%)"),
P_not_stated = paste(paste(positive_not_stated,
(positive_not_stated_percentage), sep = " (")
, "%)", sep = ""),
P_not_stated = na_if(P_not_stated, "NA ( NA%)")) %>%
select(Author, Population_tested, SARS_CoV_2_negative, N_current_smoker, N_former_smoker, N_current_former_smoker,
N_never_smoker, N_not_stated, SARS_CoV_2_positive, P_current_smoker, P_former_smoker, P_current_former_smoker,
P_never_smoker, P_not_stated)
a$Author <- to_upper_camel_case(a$Author, sep_out = ", ")
a$Author  <- a$Author  %>%
recode("Bello, Chavolla" = "Bello-Chavolla",
"De, Lusignan" = "de Lusignan",
"Del, Valle" = "del Valle")
numeric_columns <- c('Population_tested', 'SARS_CoV_2_negative', 'N_current_smoker', 'N_former_smoker',
'N_current_former_smoker', 'N_never_smoker', 'N_not_stated', 'SARS_CoV_2_positive', 'P_current_smoker',
'P_former_smoker', 'P_current_former_smoker', 'P_never_smoker', 'P_not_stated')
a <- flextable(a) %>%
set_caption(caption = 'SARS-CoV-2 infection by smoking status') %>%
colformat_num(j = numeric_columns, digits = 0, na_str = '-', big.mark = ',')
a <- set_header_labels(a,
Population_tested = 'Total population tested',
SARS_CoV_2_negative = "N (%)",
N_current_smoker = "Current smoker (%)",
N_former_smoker = "Former smoker (%)",
N_current_former_smoker = "Current/former smoker (%)",
N_never_smoker = "Never smoker (%)",
N_not_stated = "Not stated (%)",
SARS_CoV_2_positive = "N (%)",
P_current_smoker = "Current smoker (%)",
P_former_smoker = "Former smoker (%)",
P_current_former_smoker = "Current/former smoker (%)",
P_never_smoker = "Never smoker (%)",
P_not_stated = "Not stated (%)") %>%
add_header_row(top = TRUE, values = c("","SARS-CoV-2 negative", "SARS-CoV-2 positive" ), colwidths = c(2, 6, 6)) %>%
theme_booktabs() %>%
fix_border_issues() %>%
set_table_properties(width = 1, layout = 'autofit')  %>%
colformat_char(na_str = '-')
a
save_as_docx(a, path = here('output_data', 'Table_2.docx'))
source(here::here('scripts', 'rr_function.R'))
View(RR_testing)
table_2 <- table_2_word
included_studies <- quality_table_2 %>%
filter(overall_quality != 'poor') %>%
select(lead_author)
meta <- tibble('author' = table_2$lead_author,
'negative_smoker' = table_2$negative_current_smoker,
'negative_never_smoker' = table_2$negative_never_smoker,
'positive_smoker' = table_2$positive_current_smoker,
'positive_never_smoker' = table_2$positive_never_smoker,
'negative_former_smoker' = table_2$negative_former_smoker,
'positive_former_smoker' = table_2$positive_former_smoker) %>%
filter(author %in% included_studies$lead_author)
meta$author <- to_upper_camel_case(meta$author, sep_out = ", ")
meta$author <- plyr::mapvalues(meta$author,
from = cleaned_names,
to = correct_names)
meta
meta$author <- plyr::mapvalues(meta$author,
from = cleaned_names,
to = correct_names)
meta
testing_rr <- list()
for(author in 1:(nrow(meta)-1)){
meta %>%
filter(author != "Niedzwiedz")
testing_rr[[author]] <- RR_testing(author, "current")
}
meta %>%
filter(author != "Niedzwiedz")
for(author in 1:nrow(meta)){
meta %>%
filter(author != "Niedzwiedz")
testing_rr[[author]] <- RR_testing(author, "current")
}
for(author in 1:nrow(meta)){
meta %>%
filter(author != "Niedzwiedz")
testing_rr[[]] <- RR_testing(author, "current")
}
for(author in 1:nrow(meta)){
meta %>%
filter(author != "Niedzwiedz")
testing_rr[] <- RR_testing(author, "current")
}
for(author in 1:nrow(meta)){
meta %>%
filter(author != "Niedzwiedz")
testing_rr[[]] <- RR_testing(author, "current")
}
meta %>%
filter(author != "Niedzwiedz")
testing_rr[[1]] <- RR_testing(meta$author[[1]], "current")
source(here::here('scripts', 'rr_function.R'))
meta %>%
filter(author != "Niedzwiedz")
testing_rr[[1]] <- RR_testing(meta$author[[1]], "current")
library('epitools', quietly = T)
meta %>%
filter(author != "Niedzwiedz")
testing_rr[[1]] <- RR_testing(meta$author[[1]], "current")
View(testing_rr)
testing_rr[[1]]
testing_rr[[author]] <- RR_testing(author, "current")
for(author in 1:nrow(meta)){
meta %>%
filter(author != "Niedzwiedz")
testing_rr[[author]] <- RR_testing(author, "current")
}
1:nrow(meta)
meta
1:nrow(meta)-1
1:(nrow(meta)-1))
1:(nrow(meta)-1)
a <- meta %>%
filter(author != "Niedzwiedz")
for(author in 1:(nrow(meta)-1)){
testing_rr[[author]] <- RR_testing(a[author], "current")
}
a <- meta
for(author in 1:nrow(meta)){
testing_rr[[author]] <- RR_testing(a[author], "current")
}
a[author]
testing_rr
testing_rr <- list()
for(author in 1:nrow(meta)){
testing_rr[[author]] <- RR_testing(a[author], "current")
}
source(here::here('scripts', 'rr_function.R'))
table_2 <- table_2_word
included_studies <- quality_table_2 %>%
filter(overall_quality != 'poor') %>%
select(lead_author)
meta <- tibble('author' = table_2$lead_author,
'negative_smoker' = table_2$negative_current_smoker,
'negative_never_smoker' = table_2$negative_never_smoker,
'positive_smoker' = table_2$positive_current_smoker,
'positive_never_smoker' = table_2$positive_never_smoker,
'negative_former_smoker' = table_2$negative_former_smoker,
'positive_former_smoker' = table_2$positive_former_smoker) %>%
filter(author %in% included_studies$lead_author)
meta$author <- to_upper_camel_case(meta$author, sep_out = ", ")
meta$author <- plyr::mapvalues(meta$author,
from = cleaned_names,
to = correct_names)
testing_rr <- list()
testing_rr[[1]] <- RR_testing('Rentsch', 'current')
testing_rr[[2]] <- RR_testing('Rentsch', 'former')
testing_rr[[3]] <- RR_testing('Cho', 'current')
testing_rr[[4]] <- RR_testing('Cho', 'former')
testing_rr[[5]] <- RR_testing('Kolin', 'current')
testing_rr[[6]] <- RR_testing('Kolin', 'former')
testing_rr[[7]] <- RR_testing('de Lusignan', 'current')
testing_rr[[8]] <- RR_testing('de Lusignan', 'former')
testing_rr[[9]] <- RR_testing('Parrotta', 'current')
testing_rr[[10]] <- RR_testing('Parrotta', 'former')
testing_rr[[11]] <- RR_testing('Israel', 'current')
testing_rr[[12]] <- RR_testing('Israel', 'former')
testing_rr[[13]] <- RR_testing('Eugen-Olsen', 'current')
testing_rr[[14]] <- RR_testing('Eugen-Olsen', 'former')
testing_rr[[15]] <- RR_testing('Houlihan', 'current')
testing_rr[[16]] <- RR_testing('Houlihan', 'former')
testing_rr[[17]] <- RR_testing('Woolford', 'current')
testing_rr[[18]] <- RR_testing('Woolford', 'former')
testing_rr[[19]] <- RR_testing('Govind', 'current')
testing_rr[[20]] <- RR_testing('Govind', 'former')
testing_rr[[21]] <- RR_testing('Gu', 'current')
testing_rr[[23]] <- RR_testing('Petrilli', 'current')
testing_rr[[24]] <- RR_testing('Petrilli', 'former')
testing_rr[[25]] <- RR_testing('Auvinen', 'current')
testing_rr[[26]] <- RR_testing('Auvinen', 'former')
testing_rr[[27]] <- RR_testing('Merkely', 'current')
testing_rr[[28]] <- RR_testing('Merkely', 'former')
data <- testing_rr
k <- do.call(rbind.data.frame, data)
niedz_log_RR_1<-log(1.15)
niedz_log_SE_1<-(log(1.54)-log(0.86))/3.92
k <- k %>%
add_row(., study = 'Niedzwiedz', smoking_status = 'current', log_RR = niedz_log_RR_1, log_SE = niedz_log_SE_1)
#former vs. never
niedz_log_RR_2<-log(1.42)
niedz_log_SE_2<-(log(1.69)-log(1.19))/3.92
k <- k %>%
add_row(., study = 'Niedzwiedz', smoking_status = 'former', log_RR = niedz_log_RR_2, log_SE = niedz_log_SE_2)
numbers_in_analysis <- table_2_word %>%
left_join(., quality_rating, by = 'lead_author') %>%
filter(., overall_quality != 'poor') %>%
add_row(lead_author = 'niedzwiedz', contributing_sample = 1474) %>%
replace_na(list(negative_not_stated = 0, positive_not_stated = 0)) %>%
mutate(contributing_sample = (contributing_sample - (negative_not_stated+positive_not_stated))) %>%
select(lead_author, contributing_sample) %>%
na.omit()
numbers_in_analysis$lead_author <- to_upper_camel_case(numbers_in_analysis$lead_author, sep_out = ", ")
numbers_in_analysis$lead_author <- plyr::mapvalues(numbers_in_analysis$lead_author,
from = cleaned_names,
to = correct_names)
running_meta_count <- k %>%
group_by(study) %>%
summarise()
```{r current_never}
#current vs. never smokers
current_never_meta <- k %>%
filter(smoking_status == 'current') %>%
left_join(., numbers_in_analysis %>%
rename("study" = lead_author),
by = c("study")) %>%
mutate(study = paste(study, contributing_sample, sep = ", n = ")) %>%
select(-contributing_sample)
a <-metagen(current_never_meta$log_RR,
current_never_meta$log_SE,
studlab = current_never_meta$study,
sm="RR",
comb.fixed = F, comb.random = T)
write_rds(a, here("data_clean", "bayes_testing_current.rds"))
m1_a_ecdf
write_rds(a, here("data_clean", "bayes_testing_current.rds"))
str(m1_a_ecdf)
plot(m1_a_ecdf)
m1_a_ecdf
ggplot(m1_a_ecdf, aes(x)) + stat_ecdf(geom = "step")+
labs(title="Empirical Cumulative \n Density Function",
y = "F(height)", x="Height in inch")+
theme_classic()
?ecdf
plot(m1_a_ecdf, verticals = TRUE, col.points = "blue",
col.hor = "red", col.vert = "bisque")
plot(m1_a_ecdf, main = "Empirical cumulative distribution")
plot(m1_a_ecdf, main = "Empirical cumulative distribution",
xlab = "Relative Risk")
abline(v = 0.9, col = "red")
savePlot(here("reports", "figure","ECDF_m1_a.png"))
png(file(here("reports", "figure","ECDF_m1_a.png")))
plot(m1_a_ecdf, main = "Empirical cumulative distribution",
xlab = "Relative Risk")
abline(v = 0.9, col = "red")
dev.off()
here("reports", "figure","ECDF_m1_a.png")
png(file = (here("reports", "figure","ECDF_m1_a.png")))
plot(m1_a_ecdf, main = "Empirical cumulative distribution",
xlab = "Relative Risk")
abline(v = 0.9, col = "red")
dev.off()
m1_a_ecdf(0.9)
paste(m1_a_ecdf(0.9), round = 2)
paste(round(m1_a_ecdf(0.9), 2)
_
paste(round(m1_a_ecdf(0.9), 2))
paste(round(m1_a_ecdf(0.9), 2), "%", sep = "")
paste(round(m1_a_ecdf(0.9)*100, 2), "%", sep = "")
png(file = (here("reports", "figure","ECDF_m2_a.png")))
plot(m2_a_ecdf, main = "Empirical cumulative distribution",
xlab = "Relative Risk")
abline(v = 1.1, col = "red")
dev.off()
write_rds(a, here("data_clean", "bayes_testing_current.rds"))
png(file = (here("reports", "figure","ECDF_m3_a.png")))
plot(m3_a_ecdf, main = "Empirical cumulative distribution",
xlab = "Relative Risk")
abline(v = 1.1, col = "red")
dev.off()
png(file = (here("reports", "figure","ECDF_m4_a.png")))
plot(m4_a_ecdf, main = "Empirical cumulative distribution",
xlab = "Relative Risk")
abline(v = 1.1, col = "red")
dev.off()
png(file = (here("reports", "figure","ECDF_m5_a.png")))
plot(m5_a_ecdf, main = "Empirical cumulative distribution",
xlab = "Relative Risk")
abline(v = 1.1, col = "red")
dev.off()
png(file = (here("reports", "figure","ECDF_m6_a.png")))
plot(m6_a_ecdf, main = "Empirical cumulative distribution",
xlab = "Relative Risk")
abline(v = 1.1, col = "red")
dev.off()
png(file = (here("reports", "figure","ECDF_m7_a.png")))
plot(m7_a_ecdf, main = "Empirical cumulative distribution",
xlab = "Relative Risk")
abline(v = 1.1, col = "red")
dev.off()
png(file = (here("reports", "figure","ECDF_m8_a.png")))
plot(m8_a_ecdf, main = "Empirical cumulative distribution",
xlab = "Relative Risk")
abline(v = 1.1, col = "red")
dev.off()
prisma
prisma <- search_details %>%
group_by(review_version) %>%
filter(review_version == current_review_version) %>%
mutate(title_abstract = sum(ovid_number_results, medrxiv_number_results, other_source_included),
full_texts_assessed = sum(ovid_screened, medrxiv_screened, other_source_included),
title_abstract_included = sum(ovid_included, medrxiv_included, other_source_included),
title_abstract_excluded = title_abstract - full_texts_assessed,
full_text_excluded = full_texts_assessed-total_included,
previous_total = previous_total,
previous_minus_superseded = previous_total-superseded,
current_total = current_total) %>%
select("Review version" = review_version,
"Date Screened" = date_screened,
"OVID results" = "ovid_number_results",
"medRxiv results" = "medrxiv_number_results",
"Other sources" = "other_source_included",
"Title/abstracts screened" = "title_abstract",
"Title/abstracts excluded" = "title_abstract_excluded",
"Full texts assessed" = "full_texts_assessed",
"Full texts excluded" = "full_text_excluded",
"Records carried forward" = "previous_minus_superseded",
"Supersed from previous version" = superseded,
"Studies in narrative synthesis" = "current_total")
prisma
flextable(prisma)
prisma
running_meta_count
prisma
current_total <- search_details %>%
select(total_included) %>%
sum()
previous_total <- search_details %>%
filter(review_version %in% prev_versions) %>%
select(total_included) %>%
sum()
prisma <- search_details %>%
group_by(review_version) %>%
filter(review_version == current_version) %>%
mutate(title_abstract = sum(ovid_number_results, medrxiv_number_results, other_source_included),
full_texts_assessed = sum(ovid_screened, medrxiv_screened, other_source_included),
title_abstract_included = sum(ovid_included, medrxiv_included, other_source_included),
title_abstract_excluded = title_abstract - full_texts_assessed,
full_text_excluded = full_texts_assessed-total_included,
previous_total = previous_total,
previous_minus_superseded = previous_total-superseded,
current_total = current_total) %>%
select("Review version" = review_version,
"Date Screened" = date_screened,
"OVID results" = "ovid_number_results",
"medRxiv results" = "medrxiv_number_results",
"Other sources" = "other_source_included",
"Title/abstracts screened" = "title_abstract",
"Title/abstracts excluded" = "title_abstract_excluded",
"Full texts assessed" = "full_texts_assessed",
"Full texts excluded" = "full_text_excluded",
"Records carried forward" = "previous_minus_superseded",
"Supersed from previous version" = superseded,
"Studies in narrative synthesis" = "current_total")
flextable(prisma)
