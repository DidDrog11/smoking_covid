from_prev_version <- data_study_general %>%
filter(review_version %in% prev_versions) %>%
filter(!(lead_author %in% exclude_from_analysis)) %>%
tally()
source(here::here('scripts', 'prisma_function.R'))
PRISMA_v5 <- PRISMA(search_details)
PRISMA_v5 <- as.data.frame(PRISMA_v5)
a <- PRISMA_v5 %>%
t() %>%
as.data.frame() %>%
add_rownames() %>%
flextable() %>%
set_header_labels(rowname = 'PRISMA category',
V1 = 'Number of studies') %>%
set_table_properties(width = 1, layout = 'autofit') %>%
set_caption(caption = 'Data for PRISMA')
save_as_docx(a, path = here('data_clean', 'PRISMA_details.docx'))
a
#Countries
country <- table_1$country %>%
to_upper_camel_case() %>%
recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Country' = 1,
'Number' = 2)
ggplot(country, aes(x = reorder(Country, desc(-Number)), y = Number))+
geom_col()+
coord_flip()+
theme_bw()+
labs(title = 'Countries where studies were performed',
y = 'Number of studies',
x = 'Country')
a <- flextable(country) %>%
set_table_properties(width = 0.5, layout = 'autofit')
a
save_as_docx(a, path = here('data_clean', 'Countries_performing_studies.docx'))
country
library('ggmap')
citation("ggmap")
#Countries
country <- table_1$country %>%
to_upper_camel_case() %>%
recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Country' = 1,
'Number' = 2) %>%
mutate_geocode()
#Countries
country <- table_1$country %>%
to_upper_camel_case() %>%
recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Country' = 1,
'Number' = 2) %>%
mutate_geocode(Country)
#Countries
country <- table_1$country %>%
to_upper_camel_case() %>%
recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Country' = 1,
'Number' = 2) %>%
mutate_geocode(1)
?mutate_geocode
#Countries
country <- table_1$country %>%
to_upper_camel_case() %>%
recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Country' = 1,
'Number' = 2) %>%
mutate_geocode(location = "Country")
#Countries
country <- table_1$country %>%
to_upper_camel_case() %>%
recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Country' = 1,
'Number' = 2) %>%
mutate_geocode(., location = "Country")
country <- table_1$country %>%
to_upper_camel_case() %>%
recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Country' = 1,
'Number' = 2)
str(country)
#Countries
country <- table_1$country %>%
to_upper_camel_case() %>%
recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Country' = 1,
'Number' = 2) %>%
mutate(Country = as.character(Country)) %>%
mutate_geocode(., location = "Country")
country <- table_1$country %>%
to_upper_camel_case() %>%
recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Country' = 1,
'Number' = 2) %>%
mutate(Country = as.character(Country))
str(country)
#Countries
country <- table_1$country %>%
to_upper_camel_case() %>%
recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Country' = 1,
'Number' = 2) %>%
mutate(Country = as.character(Country)) %>%
country <- mutate_geocode(country, Country)
country <- mutate_geocode(country, Country)
country
#Countries
country <- table_1$country %>%
to_upper_camel_case() %>%
recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Country' = 1,
'Number' = 2) %>%
mutate(Country = as.character(Country)) %>%
mutate_geocode(country, Country)
country <- table_1$country %>%
to_upper_camel_case() %>%
recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Country' = 1,
'Number' = 2) %>%
mutate(Country = as.character(Country))
country <- mutate_geocode(country, Country)
country
country_bounds <- country %>%
select(lon, lat) %>%
drop_na %>%
sp::SpatialPointsDataFrame(coords = .[,1:2], data = .) %>%
sp::bbox() * 1.1
map_world <- map_data(map = "world") %>%
filter(region != "Antarctica")
map_world
head(country)
breaks <- split(country$Number, 5)
breaks
breaks <- quantile(country$Number)
breaks
study_counties <- ggplot() +
geom_polygon(data = map_world,
aes(long, lat, group = group, fill = region),
show.legend = FALSE,
alpha = 0.25,
color = "white") +
geom_point(data = country,
aes(lon, lat), shape = 20) +
scale_size_discrete(name = "Number of studies")
theme_bw() +
theme(axis.line = element_line(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text = element_blank()) +
labs(title = "Net Global Chicken Trade 2010",
subtitle = "Polyconic projection",
caption = "D. Kahle and H. Wickham. ggmap: Spatial Visualization with ggplot2. The R Journal, 5(1), 144-161. URL http://journal.r-project.org/archive/2013-1/kahle-wickham.pdf") +
coord_map("polyconic",
xlim = c(country_bounds["lon", "min"],
country_bounds["lon", "max"]),
ylim = c(country_bounds["lat", "min"],
country_bounds["lat", "max"]))
study_counties <- ggplot() +
geom_polygon(data = map_world,
aes(long, lat, group = group, fill = region),
show.legend = FALSE,
alpha = 0.25,
color = "white") +
geom_point(data = country,
aes(lon, lat), shape = 20) +
scale_size_continuous(name = "Number of studies") +
theme_bw() +
theme(axis.line = element_line(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text = element_blank()) +
labs(title = "Net Global Chicken Trade 2010",
subtitle = "Polyconic projection",
caption = "D. Kahle and H. Wickham. ggmap: Spatial Visualization with ggplot2. The R Journal, 5(1), 144-161. URL http://journal.r-project.org/archive/2013-1/kahle-wickham.pdf") +
coord_map("polyconic",
xlim = c(country_bounds["lon", "min"],
country_bounds["lon", "max"]),
ylim = c(country_bounds["lat", "min"],
country_bounds["lat", "max"]))
study_counties
study_counties <- ggplot() +
geom_polygon(data = map_world,
aes(long, lat, group = group, fill = region),
show.legend = FALSE,
alpha = 0.25,
color = "white") +
geom_point(data = country,
aes(lon, lat), shape = 20) +
scale_size_continuous(name = "Number of studies") +
theme_bw() +
theme(axis.line = element_line(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text = element_blank()) +
labs(title = "Net Global Chicken Trade 2010",
subtitle = "Polyconic projection",
caption = "D. Kahle and H. Wickham. ggmap: Spatial Visualization with ggplot2. The R Journal, 5(1), 144-161. URL http://journal.r-project.org/archive/2013-1/kahle-wickham.pdf") +
coord_map("mercator",
xlim = c(country_bounds["lon", "min"],
country_bounds["lon", "max"]),
ylim = c(country_bounds["lat", "min"],
country_bounds["lat", "max"]))
study_countries <- ggplot() +
geom_polygon(data = map_world,
aes(long, lat, group = group, fill = region),
show.legend = FALSE,
alpha = 0.25,
color = "white") +
geom_point(data = country,
aes(lon, lat), shape = 20) +
scale_size_continuous(name = "Number of studies") +
theme_bw() +
theme(axis.line = element_line(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text = element_blank()) +
labs(title = "Net Global Chicken Trade 2010",
subtitle = "Polyconic projection",
caption = "D. Kahle and H. Wickham. ggmap: Spatial Visualization with ggplot2. The R Journal, 5(1), 144-161. URL http://journal.r-project.org/archive/2013-1/kahle-wickham.pdf") +
coord_map("mercator",
xlim = c(country_bounds["lon", "min"],
country_bounds["lon", "max"]),
ylim = c(country_bounds["lat", "min"],
country_bounds["lat", "max"]))
study_countries
?coord_map
study_countries <- ggplot() +
geom_polygon(data = map_world,
aes(long, lat, group = group, fill = region),
show.legend = FALSE,
alpha = 0.25,
color = "white") +
geom_point(data = country,
aes(lon, lat), shape = 20) +
scale_size_continuous(name = "Number of studies") +
theme_bw() +
theme(axis.line = element_line(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text = element_blank()) +
labs(title = "Net Global Chicken Trade 2010",
subtitle = "Polyconic projection",
caption = "D. Kahle and H. Wickham. ggmap: Spatial Visualization with ggplot2. The R Journal, 5(1), 144-161. URL http://journal.r-project.org/archive/2013-1/kahle-wickham.pdf")
study_countries
ggplot() +
geom_polygon(data = map_world,
aes(long, lat, group = group, fill = region),
show.legend = FALSE,
alpha = 0.25,
color = "white") +
geom_point(data = country,
aes(lon, lat, size = Number), shape = 20) +
scale_size_continuous(name = "Number of studies") +
theme_bw() +
theme(axis.line = element_line(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text = element_blank()) +
labs(title = "Net Global Chicken Trade 2010",
subtitle = "Polyconic projection",
caption = "D. Kahle and H. Wickham. ggmap: Spatial Visualization with ggplot2. The R Journal, 5(1), 144-161. URL http://journal.r-project.org/archive/2013-1/kahle-wickham.pdf")
study_countries <- ggplot() +
geom_polygon(data = map_world,
aes(long, lat, group = group, fill = region),
show.legend = FALSE,
alpha = 0.25,
color = "white") +
geom_point(data = country,
aes(lon, lat, size = Number), shape = 20) +
scale_size_continuous(name = "Number of studies") +
theme_bw() +
theme(axis.line = element_line(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text = element_blank()) +
labs(title = "Net Global Chicken Trade 2010",
subtitle = "Polyconic projection",
caption = "D. Kahle and H. Wickham. ggmap: Spatial Visualization with ggplot2. The R Journal")
study_countries
#Countries
country <- table_1$country %>%
to_upper_camel_case() %>%
recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
filter(country != "multiple") %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Country' = 1,
'Number' = 2) %>%
mutate(Country = as.character(Country))
#Countries
country <- table_1$country %>%
to_upper_camel_case() %>%
recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
filter(country != multiple) %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Country' = 1,
'Number' = 2) %>%
mutate(Country = as.character(Country))
#Countries
country <- table_1$country %>%
to_upper_camel_case() %>%
recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
filter(.$country != "multiple") %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Country' = 1,
'Number' = 2) %>%
mutate(Country = as.character(Country))
country  <- table_1 %>%
filter(country != "multiple")
country <- mutate_geocode(country, Country)
country
#Countries
country <- table_1$country %>%
to_upper_camel_case() %>%
recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Country' = 1,
'Number' = 2) %>%
mutate(Country = as.character(Country))
country  <- country %>%
filter(country != "multiple")
country
country  <- country %>%
filter(country != "Multiple")
country  <- country %>%
filter(., country != "Multiple")
country
country  <- country %>%
filter(country != "Multiple")
#Countries
country <- table_1$country %>%
to_upper_camel_case() %>%
filter(country != "Multiple") %>%
recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Country' = 1,
'Number' = 2) %>%
mutate(Country = as.character(Country))
#Countries
country <- table_1$country %>%
filter(country != "Multiple") %>%
to_upper_camel_case() %>%
recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Country' = 1,
'Number' = 2) %>%
mutate(Country = as.character(Country))
#Countries
country <- table_1$country %>%
to_upper_camel_case() %>%
recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Country' = 1,
'Number' = 2) %>%
mutate(Country = as.character(Country))
country  <- country[country != "Multiple"]
country
country[country] <- country[country != "Multiple"]
#Countries
country <- table_1$country %>%
to_upper_camel_case() %>%
recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Country' = 1,
'Number' = 2) %>%
mutate(Country = as.character(Country))
country[country] <- country[country != "Multiple"]
country <- subset(country, Country != "Multiple")
country
country_bounds <- country %>%
select(lon, lat) %>%
drop_na %>%
sp::SpatialPointsDataFrame(coords = .[,1:2], data = .) %>%
sp::bbox() * 1.1
#Countries
country <- table_1$country %>%
to_upper_camel_case() %>%
recode(., 'Usa' = 'USA', 'Uk' = 'UK', 'SaudiArabia' = 'Saudi Arabia') %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename('Country' = 1,
'Number' = 2) %>%
mutate(Country = as.character(Country))
country <- subset(country, Country != "Multiple")
country <- mutate_geocode(country, Country)
country_bounds <- country %>%
select(lon, lat) %>%
drop_na %>%
sp::SpatialPointsDataFrame(coords = .[,1:2], data = .) %>%
sp::bbox() * 1.1
map_world <- map_data(map = "world") %>%
filter(region != "Antarctica")
study_countries <- ggplot() +
geom_polygon(data = map_world,
aes(long, lat, group = group, fill = region),
show.legend = FALSE,
alpha = 0.25,
color = "white") +
geom_point(data = country,
aes(lon, lat, size = Number), shape = 20) +
scale_size_continuous(name = "Number of studies") +
theme_bw() +
theme(axis.line = element_line(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text = element_blank()) +
labs(title = "Net Global Chicken Trade 2010",
subtitle = "Polyconic projection",
caption = "D. Kahle and H. Wickham. ggmap: Spatial Visualization with ggplot2. The R Journal")
study_countries
study_countries <- ggplot() +
geom_polygon(data = map_world,
aes(long, lat, group = group, fill = region),
show.legend = FALSE,
alpha = 0.25,
color = "white") +
geom_point(data = country,
aes(lon, lat, size = Number), shape = 20) +
scale_size_continuous(name = "Number of studies") +
theme_bw() +
theme(axis.line = element_line(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text = element_blank()) +
labs(title = "Number of studies",
caption = "D. Kahle and H. Wickham. ggmap: Spatial Visualization with ggplot2. The R Journal")
study_countries
ggplot(country, aes(x = reorder(Country, desc(-Number)), y = Number))+
geom_col()+
coord_flip()+
theme_bw()+
labs(title = 'Countries where studies were performed',
y = 'Number of studies',
x = 'Country')
